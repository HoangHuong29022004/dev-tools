#!/bin/bash

# üöÄ Fix SSL cho t·∫•t c·∫£ d·ª± √°n - S·ª≠ d·ª•ng mkcert
# Tool n√†y s·∫Ω t·∫°o l·∫°i SSL certificate cho t·∫•t c·∫£ d·ª± √°n v·ªõi mkcert

set -e

# M√†u s·∫Øc
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
PURPLE='\033[0;35m'
NC='\033[0m'

print_status() {
    echo -e "${BLUE}üîß $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${PURPLE}‚ÑπÔ∏è  $1${NC}"
}

# Function ki·ªÉm tra mkcert
check_mkcert() {
    if ! command -v mkcert &> /dev/null; then
        print_status "üì¶ C√†i ƒë·∫∑t mkcert..."
        brew install mkcert
        mkcert -install
        print_success "ƒê√£ c√†i ƒë·∫∑t v√† c√†i ƒë·∫∑t mkcert"
    else
        print_success "mkcert ƒë√£ c√≥ s·∫µn"
    fi
}

# Function fix SSL cho m·ªôt d·ª± √°n
fix_project_ssl() {
    local project_name=$1
    local domain="${project_name}.code"
    local ssl_dir="/opt/homebrew/etc/nginx/ssl"
    
    print_status "üîí ƒêang fix SSL cho d·ª± √°n: $project_name"
    
    # Ki·ªÉm tra d·ª± √°n c√≥ t·ªìn t·∫°i kh√¥ng
    if [ ! -d "/opt/homebrew/var/www/$project_name" ]; then
        print_warning "D·ª± √°n $project_name kh√¥ng t·ªìn t·∫°i, b·ªè qua"
        return 0
    fi
    
    # Ki·ªÉm tra c·∫•u h√¨nh Nginx
    local nginx_config="/opt/homebrew/etc/nginx/sites-available/$domain"
    if [ ! -f "$nginx_config" ]; then
        print_warning "C·∫•u h√¨nh Nginx cho $domain kh√¥ng t·ªìn t·∫°i, b·ªè qua"
        return 0
    fi
    
    # Backup certificate c≈© n·∫øu c√≥
    if [ -f "$ssl_dir/$domain.crt" ]; then
        print_status "Backup certificate c≈©..."
        mv "$ssl_dir/$domain.crt" "$ssl_dir/$domain.crt.backup.$(date +%Y%m%d_%H%M%S)"
        print_success "ƒê√£ backup certificate c≈©"
    fi
    
    if [ -f "$ssl_dir/$domain.key" ]; then
        mv "$ssl_dir/$domain.key" "$ssl_dir/$domain.key.backup.$(date +%Y%m%d_%H%M%S)"
    fi
    
    # T·∫°o certificate m·ªõi v·ªõi mkcert
    print_status "T·∫°o certificate m·ªõi v·ªõi mkcert..."
    cd "$ssl_dir"
    
    # T·∫°o certificate v·ªõi t·∫•t c·∫£ t√™n mi·ªÅn c·∫ßn thi·∫øt
    mkcert "$domain" "*.$domain" localhost 127.0.0.1 ::1
    
    # Copy v·ªõi t√™n ƒë√∫ng cho Nginx
    cp "$domain+4.pem" "$domain.crt"
    cp "$domain+4-key.pem" "$domain.key"
    
    # Set permissions
    chmod 644 "$domain.key" "$domain.crt"
    chown $(whoami):admin "$domain.key" "$domain.crt"
    
    # Verify
    if [ -f "$domain.key" ] && [ -f "$domain.crt" ]; then
        print_success "‚úÖ SSL certificate mkcert ƒë√£ t·∫°o th√†nh c√¥ng cho $domain"
        print_success "‚úÖ Certificate ƒë∆∞·ª£c tin t∆∞·ªüng 100% b·ªüi browser"
    else
        print_error "‚ùå L·ªói t·∫°o SSL certificate cho $domain"
        return 1
    fi
    
    # Quay v·ªÅ th∆∞ m·ª•c g·ªëc
    cd - > /dev/null
    
    return 0
}

# Function fix t·∫•t c·∫£ d·ª± √°n
fix_all_projects() {
    print_status "üöÄ Fix SSL cho t·∫•t c·∫£ d·ª± √°n..."
    
    if [ ! -d "/opt/homebrew/var/www" ]; then
        print_error "Th∆∞ m·ª•c d·ª± √°n kh√¥ng t·ªìn t·∫°i!"
        return 1
    fi
    
    local projects=()
    for project in /opt/homebrew/var/www/*; do
        if [ -d "$project" ]; then
            projects+=("$(basename "$project")")
        fi
    done
    
    if [ ${#projects[@]} -eq 0 ]; then
        print_warning "Kh√¥ng c√≥ d·ª± √°n n√†o ƒë∆∞·ª£c t·∫°o!"
        return 0
    fi
    
    print_info "T√¨m th·∫•y ${#projects[@]} d·ª± √°n:"
    for project in "${projects[@]}"; do
        echo "  üìÅ $project"
    done
    
    echo ""
    read -p "B·∫°n c√≥ mu·ªën fix SSL cho t·∫•t c·∫£ d·ª± √°n n√†y kh√¥ng? (y/N): " confirm
    
    if [ "$confirm" = "y" ] || [ "$confirm" = "Y" ]; then
        local success_count=0
        local total_count=${#projects[@]}
        
        for project in "${projects[@]}"; do
            echo ""
            if fix_project_ssl "$project"; then
                ((success_count++))
            fi
        done
        
        echo ""
        print_success "üéâ ƒê√£ fix SSL xong $success_count/$total_count d·ª± √°n!"
        
        # Ki·ªÉm tra v√† reload Nginx
        print_status "Ki·ªÉm tra c·∫•u h√¨nh Nginx..."
        if nginx -t 2>&1 | grep -q "syntax is ok"; then
            print_success "C·∫•u h√¨nh Nginx h·ª£p l·ªá"
            
            # Reload Nginx
            print_status "Reload Nginx..."
            nginx -s reload 2>/dev/null
            if [ $? -eq 0 ]; then
                print_success "ƒê√£ reload Nginx th√†nh c√¥ng"
            else
                print_warning "Reload Nginx th·∫•t b·∫°i, th·ª≠ restart..."
                brew services restart nginx
                print_success "ƒê√£ restart Nginx"
            fi
        else
            print_error "C·∫•u h√¨nh Nginx c√≥ l·ªói!"
            nginx -t
            exit 1
        fi
        
        echo ""
        print_success "üéØ T·∫•t c·∫£ d·ª± √°n ƒë√£ c√≥ SSL certificate m·ªõi!"
        print_info "B√¢y gi·ªù b·∫°n c√≥ th·ªÉ truy c·∫≠p c√°c website m√† kh√¥ng b·ªã c·∫£nh b√°o SSL"
        
    else
        print_info "ƒê√£ h·ªßy fix SSL cho t·∫•t c·∫£ d·ª± √°n"
    fi
}

# Function fix d·ª± √°n c·ª• th·ªÉ
fix_specific_project() {
    local project_name=$1
    
    if [ -z "$project_name" ]; then
        print_error "Vui l√≤ng nh·∫≠p t√™n d·ª± √°n!"
        return 1
    fi
    
    if fix_project_ssl "$project_name"; then
        echo ""
        print_success "üéâ ƒê√£ fix SSL xong d·ª± √°n $project_name!"
        
        # Reload Nginx
        print_status "Reload Nginx..."
        nginx -s reload 2>/dev/null
        if [ $? -eq 0 ]; then
            print_success "ƒê√£ reload Nginx th√†nh c√¥ng"
        else
            print_warning "Reload Nginx th·∫•t b·∫°i, th·ª≠ restart..."
            brew services restart nginx
            print_success "ƒê√£ restart Nginx"
        fi
        
        echo ""
        print_success "üåê Truy c·∫≠p: https://$project_name.code"
        print_info "SSL certificate ƒë√£ ƒë∆∞·ª£c tin t∆∞·ªüng 100% b·ªüi browser"
    fi
}

# Function hi·ªÉn th·ªã tr·∫°ng th√°i SSL
show_ssl_status() {
    print_status "üìä Tr·∫°ng th√°i SSL c·ªßa c√°c d·ª± √°n:"
    
    if [ ! -d "/opt/homebrew/var/www" ]; then
        print_error "Th∆∞ m·ª•c d·ª± √°n kh√¥ng t·ªìn t·∫°i!"
        return 1
    fi
    
    local projects=()
    for project in /opt/homebrew/var/www/*; do
        if [ -d "$project" ]; then
            projects+=("$(basename "$project")")
        fi
    done
    
    if [ ${#projects[@]} -eq 0 ]; then
        echo "Kh√¥ng c√≥ d·ª± √°n n√†o ƒë∆∞·ª£c t·∫°o!"
        return 0
    fi
    
    for project in "${projects[@]}"; do
        local domain="${project}.code"
        local ssl_dir="/opt/homebrew/etc/nginx/ssl"
        
        echo ""
        print_info "D·ª± √°n: $project"
        
        # Ki·ªÉm tra certificate
        if [ -f "$ssl_dir/$domain.crt" ] && [ -f "$ssl_dir/$domain.key" ]; then
            echo "  ‚úÖ SSL Certificate: C√≥"
            
            # Ki·ªÉm tra lo·∫°i certificate
            if file "$ssl_dir/$domain.crt" | grep -q "PEM certificate"; then
                echo "  ‚úÖ Lo·∫°i: PEM certificate (c√≥ th·ªÉ l√† mkcert)"
            else
                echo "  ‚ö†Ô∏è  Lo·∫°i: Kh√°c (c√≥ th·ªÉ l√† self-signed)"
            fi
            
            # Ki·ªÉm tra website
            if curl -k -s -o /dev/null -w "%{http_code}" "https://$domain" 2>/dev/null | grep -q "200\|301\|302"; then
                echo "  ‚úÖ Website: Ho·∫°t ƒë·ªông (https://$domain)"
            else
                echo "  ‚ùå Website: Kh√¥ng ho·∫°t ƒë·ªông"
            fi
        else
            echo "  ‚ùå SSL Certificate: Ch∆∞a c√≥"
        fi
    done
}

# Function hi·ªÉn th·ªã tr·ª£ gi√∫p
show_help() {
    echo "üöÄ Fix SSL cho t·∫•t c·∫£ d·ª± √°n - S·ª≠ d·ª•ng mkcert"
    echo "============================================="
    echo ""
    echo "C√°ch s·ª≠ d·ª•ng:"
    echo "  $0                    - Hi·ªÉn th·ªã tr·ª£ gi√∫p"
    echo "  $0 all                - Fix SSL cho t·∫•t c·∫£ d·ª± √°n"
    echo "  $0 status             - Ki·ªÉm tra tr·∫°ng th√°i SSL c·ªßa t·∫•t c·∫£ d·ª± √°n"
    echo "  $0 <t√™n_d·ª±_√°n>       - Fix SSL cho d·ª± √°n c·ª• th·ªÉ"
    echo ""
    echo "V√≠ d·ª•:"
    echo "  $0 all                - Fix SSL cho t·∫•t c·∫£ d·ª± √°n"
    echo "  $0 mitsuheavy-ecommerce - Fix SSL cho d·ª± √°n mitsuheavy-ecommerce"
    echo "  $0 haili-baohanh      - Fix SSL cho d·ª± √°n haili-baohanh"
    echo ""
    echo "L·ª£i √≠ch c·ªßa mkcert:"
    echo "  ‚úÖ Certificate ƒë∆∞·ª£c tin t∆∞·ªüng 100% b·ªüi browser"
    echo "  ‚úÖ Kh√¥ng c√≤n c·∫£nh b√°o SSL"
    echo "  ‚úÖ H·ªó tr·ª£ wildcard domains"
    echo "  ‚úÖ T·ª± ƒë·ªông c√†i ƒë·∫∑t v√†o system trust store"
    echo "  ‚úÖ H·∫øt h·∫°n sau 2 nƒÉm (thay v√¨ 1 nƒÉm)"
}

# Main execution
main() {
    # Ki·ªÉm tra mkcert
    check_mkcert
    
    case "${1:-help}" in
        "all")
            fix_all_projects
            ;;
        "status")
            show_ssl_status
            ;;
        "help"|"--help"|"-h")
            show_help
            ;;
        *)
            if [ -n "$1" ]; then
                fix_specific_project "$1"
            else
                show_help
            fi
            ;;
    esac
}

# G·ªçi main function
main "$@"
